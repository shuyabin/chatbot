// Code generated by protoc-gen-go. DO NOT EDIT.
// source: chatbot.proto

package chatbotpb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// ChatAppType - chat app type
type ChatAppType int32

const (
	ChatAppType_CAT_TELEGRAM ChatAppType = 0
	ChatAppType_CAT_COOLQQ   ChatAppType = 1
)

var ChatAppType_name = map[int32]string{
	0: "CAT_TELEGRAM",
	1: "CAT_COOLQQ",
}
var ChatAppType_value = map[string]int32{
	"CAT_TELEGRAM": 0,
	"CAT_COOLQQ":   1,
}

func (x ChatAppType) String() string {
	return proto.EnumName(ChatAppType_name, int32(x))
}
func (ChatAppType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_chatbot_2d54a3e577fc84aa, []int{0}
}

// UserAppInfo - user app info
type UserAppInfo struct {
	App                  ChatAppType `protobuf:"varint,1,opt,name=app,proto3,enum=chatbotpb.ChatAppType" json:"app,omitempty"`
	Appuid               string      `protobuf:"bytes,2,opt,name=appuid,proto3" json:"appuid,omitempty"`
	Appuname             string      `protobuf:"bytes,3,opt,name=appuname,proto3" json:"appuname,omitempty"`
	Chatnums             int32       `protobuf:"varint,4,opt,name=chatnums,proto3" json:"chatnums,omitempty"`
	UsernameAppServ      string      `protobuf:"bytes,5,opt,name=usernameAppServ,proto3" json:"usernameAppServ,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *UserAppInfo) Reset()         { *m = UserAppInfo{} }
func (m *UserAppInfo) String() string { return proto.CompactTextString(m) }
func (*UserAppInfo) ProtoMessage()    {}
func (*UserAppInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_chatbot_2d54a3e577fc84aa, []int{0}
}
func (m *UserAppInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserAppInfo.Unmarshal(m, b)
}
func (m *UserAppInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserAppInfo.Marshal(b, m, deterministic)
}
func (dst *UserAppInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserAppInfo.Merge(dst, src)
}
func (m *UserAppInfo) XXX_Size() int {
	return xxx_messageInfo_UserAppInfo.Size(m)
}
func (m *UserAppInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_UserAppInfo.DiscardUnknown(m)
}

var xxx_messageInfo_UserAppInfo proto.InternalMessageInfo

func (m *UserAppInfo) GetApp() ChatAppType {
	if m != nil {
		return m.App
	}
	return ChatAppType_CAT_TELEGRAM
}

func (m *UserAppInfo) GetAppuid() string {
	if m != nil {
		return m.Appuid
	}
	return ""
}

func (m *UserAppInfo) GetAppuname() string {
	if m != nil {
		return m.Appuname
	}
	return ""
}

func (m *UserAppInfo) GetChatnums() int32 {
	if m != nil {
		return m.Chatnums
	}
	return 0
}

func (m *UserAppInfo) GetUsernameAppServ() string {
	if m != nil {
		return m.UsernameAppServ
	}
	return ""
}

// UserInfo - user info
type UserInfo struct {
	Uid                  int64          `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Name                 string         `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Apps                 []*UserAppInfo `protobuf:"bytes,3,rep,name=apps,proto3" json:"apps,omitempty"`
	Tags                 []string       `protobuf:"bytes,4,rep,name=tags,proto3" json:"tags,omitempty"`
	Money                int64          `protobuf:"varint,10,opt,name=money,proto3" json:"money,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *UserInfo) Reset()         { *m = UserInfo{} }
func (m *UserInfo) String() string { return proto.CompactTextString(m) }
func (*UserInfo) ProtoMessage()    {}
func (*UserInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_chatbot_2d54a3e577fc84aa, []int{1}
}
func (m *UserInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserInfo.Unmarshal(m, b)
}
func (m *UserInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserInfo.Marshal(b, m, deterministic)
}
func (dst *UserInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserInfo.Merge(dst, src)
}
func (m *UserInfo) XXX_Size() int {
	return xxx_messageInfo_UserInfo.Size(m)
}
func (m *UserInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_UserInfo.DiscardUnknown(m)
}

var xxx_messageInfo_UserInfo proto.InternalMessageInfo

func (m *UserInfo) GetUid() int64 {
	if m != nil {
		return m.Uid
	}
	return 0
}

func (m *UserInfo) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *UserInfo) GetApps() []*UserAppInfo {
	if m != nil {
		return m.Apps
	}
	return nil
}

func (m *UserInfo) GetTags() []string {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *UserInfo) GetMoney() int64 {
	if m != nil {
		return m.Money
	}
	return 0
}

// AppGroupInfo - app group info
type AppGroupInfo struct {
	App                  ChatAppType `protobuf:"varint,1,opt,name=app,proto3,enum=chatbotpb.ChatAppType" json:"app,omitempty"`
	UsernameAppServ      string      `protobuf:"bytes,2,opt,name=usernameAppServ,proto3" json:"usernameAppServ,omitempty"`
	Groupid              string      `protobuf:"bytes,3,opt,name=groupid,proto3" json:"groupid,omitempty"`
	Groupname            string      `protobuf:"bytes,4,opt,name=groupname,proto3" json:"groupname,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *AppGroupInfo) Reset()         { *m = AppGroupInfo{} }
func (m *AppGroupInfo) String() string { return proto.CompactTextString(m) }
func (*AppGroupInfo) ProtoMessage()    {}
func (*AppGroupInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_chatbot_2d54a3e577fc84aa, []int{2}
}
func (m *AppGroupInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AppGroupInfo.Unmarshal(m, b)
}
func (m *AppGroupInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AppGroupInfo.Marshal(b, m, deterministic)
}
func (dst *AppGroupInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AppGroupInfo.Merge(dst, src)
}
func (m *AppGroupInfo) XXX_Size() int {
	return xxx_messageInfo_AppGroupInfo.Size(m)
}
func (m *AppGroupInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_AppGroupInfo.DiscardUnknown(m)
}

var xxx_messageInfo_AppGroupInfo proto.InternalMessageInfo

func (m *AppGroupInfo) GetApp() ChatAppType {
	if m != nil {
		return m.App
	}
	return ChatAppType_CAT_TELEGRAM
}

func (m *AppGroupInfo) GetUsernameAppServ() string {
	if m != nil {
		return m.UsernameAppServ
	}
	return ""
}

func (m *AppGroupInfo) GetGroupid() string {
	if m != nil {
		return m.Groupid
	}
	return ""
}

func (m *AppGroupInfo) GetGroupname() string {
	if m != nil {
		return m.Groupname
	}
	return ""
}

// AppServInfo - app server info
type AppServInfo struct {
	Token                string      `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	AppType              ChatAppType `protobuf:"varint,2,opt,name=appType,proto3,enum=chatbotpb.ChatAppType" json:"appType,omitempty"`
	Username             string      `protobuf:"bytes,3,opt,name=username,proto3" json:"username,omitempty"`
	Sessionid            string      `protobuf:"bytes,4,opt,name=sessionid,proto3" json:"sessionid,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *AppServInfo) Reset()         { *m = AppServInfo{} }
func (m *AppServInfo) String() string { return proto.CompactTextString(m) }
func (*AppServInfo) ProtoMessage()    {}
func (*AppServInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_chatbot_2d54a3e577fc84aa, []int{3}
}
func (m *AppServInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AppServInfo.Unmarshal(m, b)
}
func (m *AppServInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AppServInfo.Marshal(b, m, deterministic)
}
func (dst *AppServInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AppServInfo.Merge(dst, src)
}
func (m *AppServInfo) XXX_Size() int {
	return xxx_messageInfo_AppServInfo.Size(m)
}
func (m *AppServInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_AppServInfo.DiscardUnknown(m)
}

var xxx_messageInfo_AppServInfo proto.InternalMessageInfo

func (m *AppServInfo) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *AppServInfo) GetAppType() ChatAppType {
	if m != nil {
		return m.AppType
	}
	return ChatAppType_CAT_TELEGRAM
}

func (m *AppServInfo) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *AppServInfo) GetSessionid() string {
	if m != nil {
		return m.Sessionid
	}
	return ""
}

// RegisterAppService - register app service
type RegisterAppService struct {
	AppServ              *AppServInfo `protobuf:"bytes,1,opt,name=appServ,proto3" json:"appServ,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *RegisterAppService) Reset()         { *m = RegisterAppService{} }
func (m *RegisterAppService) String() string { return proto.CompactTextString(m) }
func (*RegisterAppService) ProtoMessage()    {}
func (*RegisterAppService) Descriptor() ([]byte, []int) {
	return fileDescriptor_chatbot_2d54a3e577fc84aa, []int{4}
}
func (m *RegisterAppService) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RegisterAppService.Unmarshal(m, b)
}
func (m *RegisterAppService) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RegisterAppService.Marshal(b, m, deterministic)
}
func (dst *RegisterAppService) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegisterAppService.Merge(dst, src)
}
func (m *RegisterAppService) XXX_Size() int {
	return xxx_messageInfo_RegisterAppService.Size(m)
}
func (m *RegisterAppService) XXX_DiscardUnknown() {
	xxx_messageInfo_RegisterAppService.DiscardUnknown(m)
}

var xxx_messageInfo_RegisterAppService proto.InternalMessageInfo

func (m *RegisterAppService) GetAppServ() *AppServInfo {
	if m != nil {
		return m.AppServ
	}
	return nil
}

// ReplyRegisterAppService - reply RegisterAppService
type ReplyRegisterAppService struct {
	AppType              ChatAppType `protobuf:"varint,1,opt,name=appType,proto3,enum=chatbotpb.ChatAppType" json:"appType,omitempty"`
	Error                string      `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	SessionID            string      `protobuf:"bytes,3,opt,name=sessionID,proto3" json:"sessionID,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *ReplyRegisterAppService) Reset()         { *m = ReplyRegisterAppService{} }
func (m *ReplyRegisterAppService) String() string { return proto.CompactTextString(m) }
func (*ReplyRegisterAppService) ProtoMessage()    {}
func (*ReplyRegisterAppService) Descriptor() ([]byte, []int) {
	return fileDescriptor_chatbot_2d54a3e577fc84aa, []int{5}
}
func (m *ReplyRegisterAppService) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReplyRegisterAppService.Unmarshal(m, b)
}
func (m *ReplyRegisterAppService) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReplyRegisterAppService.Marshal(b, m, deterministic)
}
func (dst *ReplyRegisterAppService) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReplyRegisterAppService.Merge(dst, src)
}
func (m *ReplyRegisterAppService) XXX_Size() int {
	return xxx_messageInfo_ReplyRegisterAppService.Size(m)
}
func (m *ReplyRegisterAppService) XXX_DiscardUnknown() {
	xxx_messageInfo_ReplyRegisterAppService.DiscardUnknown(m)
}

var xxx_messageInfo_ReplyRegisterAppService proto.InternalMessageInfo

func (m *ReplyRegisterAppService) GetAppType() ChatAppType {
	if m != nil {
		return m.AppType
	}
	return ChatAppType_CAT_TELEGRAM
}

func (m *ReplyRegisterAppService) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

func (m *ReplyRegisterAppService) GetSessionID() string {
	if m != nil {
		return m.SessionID
	}
	return ""
}

// ChatMsg - chat message
type ChatMsg struct {
	Msg                  string        `protobuf:"bytes,1,opt,name=msg,proto3" json:"msg,omitempty"`
	Uai                  *UserAppInfo  `protobuf:"bytes,2,opt,name=uai,proto3" json:"uai,omitempty"`
	Agi                  *AppGroupInfo `protobuf:"bytes,3,opt,name=agi,proto3" json:"agi,omitempty"`
	Filename             string        `protobuf:"bytes,4,opt,name=filename,proto3" json:"filename,omitempty"`
	FileData             []byte        `protobuf:"bytes,5,opt,name=fileData,proto3" json:"fileData,omitempty"`
	Error                string        `protobuf:"bytes,6,opt,name=error,proto3" json:"error,omitempty"`
	Token                string        `protobuf:"bytes,7,opt,name=token,proto3" json:"token,omitempty"`
	SessionID            string        `protobuf:"bytes,8,opt,name=sessionID,proto3" json:"sessionID,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *ChatMsg) Reset()         { *m = ChatMsg{} }
func (m *ChatMsg) String() string { return proto.CompactTextString(m) }
func (*ChatMsg) ProtoMessage()    {}
func (*ChatMsg) Descriptor() ([]byte, []int) {
	return fileDescriptor_chatbot_2d54a3e577fc84aa, []int{6}
}
func (m *ChatMsg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChatMsg.Unmarshal(m, b)
}
func (m *ChatMsg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChatMsg.Marshal(b, m, deterministic)
}
func (dst *ChatMsg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChatMsg.Merge(dst, src)
}
func (m *ChatMsg) XXX_Size() int {
	return xxx_messageInfo_ChatMsg.Size(m)
}
func (m *ChatMsg) XXX_DiscardUnknown() {
	xxx_messageInfo_ChatMsg.DiscardUnknown(m)
}

var xxx_messageInfo_ChatMsg proto.InternalMessageInfo

func (m *ChatMsg) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

func (m *ChatMsg) GetUai() *UserAppInfo {
	if m != nil {
		return m.Uai
	}
	return nil
}

func (m *ChatMsg) GetAgi() *AppGroupInfo {
	if m != nil {
		return m.Agi
	}
	return nil
}

func (m *ChatMsg) GetFilename() string {
	if m != nil {
		return m.Filename
	}
	return ""
}

func (m *ChatMsg) GetFileData() []byte {
	if m != nil {
		return m.FileData
	}
	return nil
}

func (m *ChatMsg) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

func (m *ChatMsg) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *ChatMsg) GetSessionID() string {
	if m != nil {
		return m.SessionID
	}
	return ""
}

// ChatMsgStream - chat message stream
type ChatMsgStream struct {
	// totalLength - If the message is too long, it will send data in multiple msg, this is the total length.
	TotalLength int32 `protobuf:"varint,1,opt,name=totalLength,proto3" json:"totalLength,omitempty"`
	// curStart - The starting point of the current data (in bytes).
	CurStart int32 `protobuf:"varint,2,opt,name=curStart,proto3" json:"curStart,omitempty"`
	// curLength - The length of the current data (in bytes).
	CurLength int32 `protobuf:"varint,3,opt,name=curLength,proto3" json:"curLength,omitempty"`
	// hashData - This is the hash of each paragraph.
	HashData string `protobuf:"bytes,4,opt,name=hashData,proto3" json:"hashData,omitempty"`
	// totalHashData - If multiple messages return data, this is the hash value of all data, only sent in the last message.
	TotalHashData string `protobuf:"bytes,5,opt,name=totalHashData,proto3" json:"totalHashData,omitempty"`
	// data
	Data []byte `protobuf:"bytes,6,opt,name=data,proto3" json:"data,omitempty"`
	// error
	Error string `protobuf:"bytes,7,opt,name=error,proto3" json:"error,omitempty"`
	// token
	Token                string   `protobuf:"bytes,8,opt,name=token,proto3" json:"token,omitempty"`
	Chat                 *ChatMsg `protobuf:"bytes,10,opt,name=chat,proto3" json:"chat,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ChatMsgStream) Reset()         { *m = ChatMsgStream{} }
func (m *ChatMsgStream) String() string { return proto.CompactTextString(m) }
func (*ChatMsgStream) ProtoMessage()    {}
func (*ChatMsgStream) Descriptor() ([]byte, []int) {
	return fileDescriptor_chatbot_2d54a3e577fc84aa, []int{7}
}
func (m *ChatMsgStream) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChatMsgStream.Unmarshal(m, b)
}
func (m *ChatMsgStream) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChatMsgStream.Marshal(b, m, deterministic)
}
func (dst *ChatMsgStream) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChatMsgStream.Merge(dst, src)
}
func (m *ChatMsgStream) XXX_Size() int {
	return xxx_messageInfo_ChatMsgStream.Size(m)
}
func (m *ChatMsgStream) XXX_DiscardUnknown() {
	xxx_messageInfo_ChatMsgStream.DiscardUnknown(m)
}

var xxx_messageInfo_ChatMsgStream proto.InternalMessageInfo

func (m *ChatMsgStream) GetTotalLength() int32 {
	if m != nil {
		return m.TotalLength
	}
	return 0
}

func (m *ChatMsgStream) GetCurStart() int32 {
	if m != nil {
		return m.CurStart
	}
	return 0
}

func (m *ChatMsgStream) GetCurLength() int32 {
	if m != nil {
		return m.CurLength
	}
	return 0
}

func (m *ChatMsgStream) GetHashData() string {
	if m != nil {
		return m.HashData
	}
	return ""
}

func (m *ChatMsgStream) GetTotalHashData() string {
	if m != nil {
		return m.TotalHashData
	}
	return ""
}

func (m *ChatMsgStream) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *ChatMsgStream) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

func (m *ChatMsgStream) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *ChatMsgStream) GetChat() *ChatMsg {
	if m != nil {
		return m.Chat
	}
	return nil
}

// RequestChatData - request chat data
type RequestChatData struct {
	Token                string   `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	SessionID            string   `protobuf:"bytes,2,opt,name=sessionID,proto3" json:"sessionID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RequestChatData) Reset()         { *m = RequestChatData{} }
func (m *RequestChatData) String() string { return proto.CompactTextString(m) }
func (*RequestChatData) ProtoMessage()    {}
func (*RequestChatData) Descriptor() ([]byte, []int) {
	return fileDescriptor_chatbot_2d54a3e577fc84aa, []int{8}
}
func (m *RequestChatData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RequestChatData.Unmarshal(m, b)
}
func (m *RequestChatData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RequestChatData.Marshal(b, m, deterministic)
}
func (dst *RequestChatData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RequestChatData.Merge(dst, src)
}
func (m *RequestChatData) XXX_Size() int {
	return xxx_messageInfo_RequestChatData.Size(m)
}
func (m *RequestChatData) XXX_DiscardUnknown() {
	xxx_messageInfo_RequestChatData.DiscardUnknown(m)
}

var xxx_messageInfo_RequestChatData proto.InternalMessageInfo

func (m *RequestChatData) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *RequestChatData) GetSessionID() string {
	if m != nil {
		return m.SessionID
	}
	return ""
}

func init() {
	proto.RegisterType((*UserAppInfo)(nil), "chatbotpb.UserAppInfo")
	proto.RegisterType((*UserInfo)(nil), "chatbotpb.UserInfo")
	proto.RegisterType((*AppGroupInfo)(nil), "chatbotpb.AppGroupInfo")
	proto.RegisterType((*AppServInfo)(nil), "chatbotpb.AppServInfo")
	proto.RegisterType((*RegisterAppService)(nil), "chatbotpb.RegisterAppService")
	proto.RegisterType((*ReplyRegisterAppService)(nil), "chatbotpb.ReplyRegisterAppService")
	proto.RegisterType((*ChatMsg)(nil), "chatbotpb.ChatMsg")
	proto.RegisterType((*ChatMsgStream)(nil), "chatbotpb.ChatMsgStream")
	proto.RegisterType((*RequestChatData)(nil), "chatbotpb.RequestChatData")
	proto.RegisterEnum("chatbotpb.ChatAppType", ChatAppType_name, ChatAppType_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ChatBotServiceClient is the client API for ChatBotService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ChatBotServiceClient interface {
	// registerAppService - register app service
	RegisterAppService(ctx context.Context, in *RegisterAppService, opts ...grpc.CallOption) (*ReplyRegisterAppService, error)
	// sendChat - send chat
	SendChat(ctx context.Context, opts ...grpc.CallOption) (ChatBotService_SendChatClient, error)
	// requestChat - request chat
	RequestChat(ctx context.Context, in *RequestChatData, opts ...grpc.CallOption) (ChatBotService_RequestChatClient, error)
}

type chatBotServiceClient struct {
	cc *grpc.ClientConn
}

func NewChatBotServiceClient(cc *grpc.ClientConn) ChatBotServiceClient {
	return &chatBotServiceClient{cc}
}

func (c *chatBotServiceClient) RegisterAppService(ctx context.Context, in *RegisterAppService, opts ...grpc.CallOption) (*ReplyRegisterAppService, error) {
	out := new(ReplyRegisterAppService)
	err := c.cc.Invoke(ctx, "/chatbotpb.ChatBotService/registerAppService", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *chatBotServiceClient) SendChat(ctx context.Context, opts ...grpc.CallOption) (ChatBotService_SendChatClient, error) {
	stream, err := c.cc.NewStream(ctx, &_ChatBotService_serviceDesc.Streams[0], "/chatbotpb.ChatBotService/sendChat", opts...)
	if err != nil {
		return nil, err
	}
	x := &chatBotServiceSendChatClient{stream}
	return x, nil
}

type ChatBotService_SendChatClient interface {
	Send(*ChatMsgStream) error
	Recv() (*ChatMsgStream, error)
	grpc.ClientStream
}

type chatBotServiceSendChatClient struct {
	grpc.ClientStream
}

func (x *chatBotServiceSendChatClient) Send(m *ChatMsgStream) error {
	return x.ClientStream.SendMsg(m)
}

func (x *chatBotServiceSendChatClient) Recv() (*ChatMsgStream, error) {
	m := new(ChatMsgStream)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *chatBotServiceClient) RequestChat(ctx context.Context, in *RequestChatData, opts ...grpc.CallOption) (ChatBotService_RequestChatClient, error) {
	stream, err := c.cc.NewStream(ctx, &_ChatBotService_serviceDesc.Streams[1], "/chatbotpb.ChatBotService/requestChat", opts...)
	if err != nil {
		return nil, err
	}
	x := &chatBotServiceRequestChatClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type ChatBotService_RequestChatClient interface {
	Recv() (*ChatMsgStream, error)
	grpc.ClientStream
}

type chatBotServiceRequestChatClient struct {
	grpc.ClientStream
}

func (x *chatBotServiceRequestChatClient) Recv() (*ChatMsgStream, error) {
	m := new(ChatMsgStream)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// ChatBotServiceServer is the server API for ChatBotService service.
type ChatBotServiceServer interface {
	// registerAppService - register app service
	RegisterAppService(context.Context, *RegisterAppService) (*ReplyRegisterAppService, error)
	// sendChat - send chat
	SendChat(ChatBotService_SendChatServer) error
	// requestChat - request chat
	RequestChat(*RequestChatData, ChatBotService_RequestChatServer) error
}

func RegisterChatBotServiceServer(s *grpc.Server, srv ChatBotServiceServer) {
	s.RegisterService(&_ChatBotService_serviceDesc, srv)
}

func _ChatBotService_RegisterAppService_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RegisterAppService)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChatBotServiceServer).RegisterAppService(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chatbotpb.ChatBotService/RegisterAppService",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChatBotServiceServer).RegisterAppService(ctx, req.(*RegisterAppService))
	}
	return interceptor(ctx, in, info, handler)
}

func _ChatBotService_SendChat_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(ChatBotServiceServer).SendChat(&chatBotServiceSendChatServer{stream})
}

type ChatBotService_SendChatServer interface {
	Send(*ChatMsgStream) error
	Recv() (*ChatMsgStream, error)
	grpc.ServerStream
}

type chatBotServiceSendChatServer struct {
	grpc.ServerStream
}

func (x *chatBotServiceSendChatServer) Send(m *ChatMsgStream) error {
	return x.ServerStream.SendMsg(m)
}

func (x *chatBotServiceSendChatServer) Recv() (*ChatMsgStream, error) {
	m := new(ChatMsgStream)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _ChatBotService_RequestChat_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(RequestChatData)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(ChatBotServiceServer).RequestChat(m, &chatBotServiceRequestChatServer{stream})
}

type ChatBotService_RequestChatServer interface {
	Send(*ChatMsgStream) error
	grpc.ServerStream
}

type chatBotServiceRequestChatServer struct {
	grpc.ServerStream
}

func (x *chatBotServiceRequestChatServer) Send(m *ChatMsgStream) error {
	return x.ServerStream.SendMsg(m)
}

var _ChatBotService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "chatbotpb.ChatBotService",
	HandlerType: (*ChatBotServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "registerAppService",
			Handler:    _ChatBotService_RegisterAppService_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "sendChat",
			Handler:       _ChatBotService_SendChat_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
		{
			StreamName:    "requestChat",
			Handler:       _ChatBotService_RequestChat_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "chatbot.proto",
}

func init() { proto.RegisterFile("chatbot.proto", fileDescriptor_chatbot_2d54a3e577fc84aa) }

var fileDescriptor_chatbot_2d54a3e577fc84aa = []byte{
	// 713 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x55, 0xcd, 0x6e, 0xd3, 0x40,
	0x10, 0xee, 0xc6, 0xf9, 0x1d, 0xf7, 0x27, 0x5a, 0x55, 0xad, 0x15, 0x81, 0x14, 0x59, 0x08, 0x85,
	0x1e, 0x4a, 0x15, 0x9e, 0x20, 0xb4, 0xa5, 0x54, 0x6a, 0x55, 0x75, 0x5b, 0x0e, 0x9c, 0xd0, 0xb6,
	0xd9, 0x3a, 0x16, 0x8d, 0xbd, 0x78, 0xd7, 0x48, 0x3d, 0x71, 0xe3, 0xca, 0x89, 0x0b, 0x6f, 0xc1,
	0xab, 0x71, 0xe4, 0x84, 0x66, 0x62, 0x3b, 0x76, 0x9a, 0x20, 0xb8, 0xcd, 0xdf, 0xce, 0x7c, 0xdf,
	0xe7, 0x99, 0x04, 0x36, 0x6e, 0x27, 0xd2, 0xde, 0xc4, 0x76, 0x5f, 0x27, 0xb1, 0x8d, 0x79, 0x27,
	0x73, 0xf5, 0x8d, 0xff, 0x93, 0x81, 0xfb, 0xce, 0xa8, 0x64, 0xa4, 0xf5, 0x69, 0x74, 0x17, 0xf3,
	0x01, 0x38, 0x52, 0x6b, 0x8f, 0xf5, 0xd9, 0x60, 0x73, 0xb8, 0xb3, 0x5f, 0x14, 0xee, 0x1f, 0x4e,
	0xa4, 0x1d, 0x69, 0x7d, 0xfd, 0xa0, 0x95, 0xc0, 0x12, 0xbe, 0x03, 0x4d, 0xa9, 0x75, 0x1a, 0x8e,
	0xbd, 0x5a, 0x9f, 0x0d, 0x3a, 0x22, 0xf3, 0x78, 0x0f, 0xda, 0x68, 0x45, 0x72, 0xaa, 0x3c, 0x87,
	0x32, 0x85, 0x8f, 0x39, 0xec, 0x18, 0xa5, 0x53, 0xe3, 0xd5, 0xfb, 0x6c, 0xd0, 0x10, 0x85, 0xcf,
	0x07, 0xb0, 0x95, 0x1a, 0x95, 0x60, 0xdd, 0x48, 0xeb, 0x2b, 0x95, 0x7c, 0xf6, 0x1a, 0xf4, 0x7c,
	0x31, 0xec, 0x7f, 0x65, 0xd0, 0x46, 0xcc, 0x04, 0xb8, 0x0b, 0x0e, 0x62, 0x40, 0xc0, 0x8e, 0x40,
	0x93, 0x73, 0xa8, 0xd3, 0xf0, 0x19, 0x2c, 0xb2, 0xf9, 0x1e, 0xd4, 0xa5, 0xd6, 0xc6, 0x73, 0xfa,
	0xce, 0xc0, 0xad, 0xf0, 0x2a, 0x91, 0x17, 0x54, 0x83, 0xef, 0xad, 0x0c, 0x10, 0xa0, 0x83, 0xef,
	0xd1, 0xe6, 0xdb, 0xd0, 0x98, 0xc6, 0x91, 0x7a, 0xf0, 0x80, 0xe6, 0xcc, 0x1c, 0xff, 0x07, 0x83,
	0xf5, 0x91, 0xd6, 0x27, 0x49, 0x9c, 0xfe, 0xaf, 0x7a, 0x4b, 0xd8, 0xd6, 0x96, 0xb2, 0xe5, 0x1e,
	0xb4, 0x02, 0x1c, 0x10, 0x8e, 0x33, 0x39, 0x73, 0x97, 0x3f, 0x81, 0x0e, 0x99, 0xc4, 0xb6, 0x4e,
	0xb9, 0x79, 0xc0, 0xff, 0xc6, 0xc0, 0xcd, 0x7a, 0x10, 0xb6, 0x6d, 0x68, 0xd8, 0xf8, 0xa3, 0x8a,
	0x08, 0x5d, 0x47, 0xcc, 0x1c, 0x7e, 0x00, 0x2d, 0x39, 0xc3, 0x45, 0xf3, 0x57, 0xa3, 0xce, 0xcb,
	0xf0, 0x1b, 0xe6, 0x10, 0xf3, 0xef, 0x9b, 0xfb, 0x88, 0xc8, 0x28, 0x63, 0xc2, 0x38, 0x0a, 0xc7,
	0x39, 0xa2, 0x22, 0xe0, 0xbf, 0x01, 0x2e, 0x54, 0x10, 0x1a, 0x4b, 0x8a, 0x23, 0xb0, 0xf0, 0x56,
	0x65, 0x08, 0x48, 0x01, 0x44, 0x56, 0xfd, 0x3a, 0x25, 0x02, 0x22, 0x2f, 0xf3, 0xbf, 0xc0, 0xae,
	0x50, 0xfa, 0xfe, 0x61, 0x65, 0x33, 0xa2, 0xc3, 0xfe, 0x8d, 0xce, 0x36, 0x34, 0x54, 0x92, 0xc4,
	0x49, 0x26, 0xff, 0xcc, 0x29, 0x11, 0x39, 0x3d, 0xca, 0x58, 0xce, 0x03, 0xfe, 0x2f, 0x06, 0x2d,
	0x6c, 0x76, 0x6e, 0x02, 0xdc, 0xbf, 0xa9, 0x09, 0x32, 0x51, 0xd1, 0xc4, 0x25, 0x48, 0x65, 0x48,
	0xfd, 0x56, 0xaf, 0x1a, 0x96, 0xf0, 0x17, 0xe0, 0xc8, 0x20, 0xa4, 0xfe, 0xee, 0x70, 0xb7, 0x4a,
	0xbb, 0x58, 0x2a, 0x81, 0x35, 0xa8, 0xfa, 0x5d, 0x78, 0xaf, 0x4a, 0x9f, 0xba, 0xf0, 0xf3, 0xdc,
	0x91, 0xb4, 0x92, 0x4e, 0x66, 0x5d, 0x14, 0xfe, 0x9c, 0x5e, 0xb3, 0x4c, 0xaf, 0xd8, 0x85, 0x56,
	0x79, 0x17, 0x2a, 0xa4, 0xdb, 0x8b, 0xa4, 0xbf, 0xd7, 0x60, 0x23, 0x23, 0x7d, 0x65, 0x13, 0x25,
	0xa7, 0xbc, 0x0f, 0xae, 0x8d, 0xad, 0xbc, 0x3f, 0x53, 0x51, 0x60, 0x27, 0x24, 0x41, 0x43, 0x94,
	0x43, 0x74, 0xef, 0x69, 0x72, 0x65, 0x65, 0x62, 0x49, 0x0f, 0xbc, 0xf7, 0xcc, 0xc7, 0x69, 0xb7,
	0x69, 0x92, 0xbd, 0x75, 0x28, 0x39, 0x0f, 0xe0, 0xcb, 0x89, 0x34, 0x13, 0xe2, 0x94, 0xf1, 0xcd,
	0x7d, 0xfe, 0x0c, 0x36, 0x68, 0xc8, 0xdb, 0xbc, 0x60, 0xf6, 0x3b, 0x51, 0x0d, 0xe2, 0x19, 0x8f,
	0x31, 0xd9, 0x24, 0x45, 0xc8, 0x9e, 0xab, 0xd1, 0x5a, 0xaa, 0x46, 0xbb, 0xac, 0xc6, 0x73, 0xa8,
	0xe3, 0x07, 0xa1, 0x8b, 0x77, 0x87, 0x7c, 0x61, 0x8f, 0xce, 0x4d, 0x20, 0x28, 0xef, 0x1f, 0xc3,
	0x96, 0x50, 0x9f, 0x52, 0x65, 0x2c, 0xc6, 0x73, 0xd1, 0x97, 0x9c, 0x5a, 0x45, 0xde, 0xda, 0x82,
	0xbc, 0x7b, 0x2f, 0xc1, 0x2d, 0xed, 0x27, 0xef, 0xc2, 0xfa, 0xe1, 0xe8, 0xfa, 0xc3, 0xf5, 0xf1,
	0xd9, 0xf1, 0x89, 0x18, 0x9d, 0x77, 0xd7, 0xf8, 0x26, 0x00, 0x46, 0x0e, 0x2f, 0x2e, 0xce, 0x2e,
	0x2f, 0xbb, 0x6c, 0xf8, 0x9b, 0xc1, 0x26, 0xbe, 0x78, 0x1d, 0xdb, 0x7c, 0xfb, 0xdf, 0x03, 0x4f,
	0x1e, 0xdf, 0xc4, 0xd3, 0x12, 0xf4, 0xc7, 0x27, 0xd3, 0xf3, 0x2b, 0xe9, 0xa5, 0x67, 0xe5, 0xaf,
	0xf1, 0x23, 0x68, 0x1b, 0x15, 0x8d, 0x71, 0x20, 0xf7, 0x1e, 0x6b, 0x31, 0xdb, 0x88, 0xde, 0xca,
	0x8c, 0xbf, 0x36, 0x60, 0x07, 0x8c, 0x9f, 0x80, 0x9b, 0xcc, 0xb5, 0xe2, 0xbd, 0xca, 0xe8, 0x8a,
	0x86, 0x7f, 0x6b, 0x75, 0xc0, 0x6e, 0x9a, 0xf4, 0x47, 0xf6, 0xea, 0x4f, 0x00, 0x00, 0x00, 0xff,
	0xff, 0x9d, 0xdf, 0x29, 0x75, 0xd9, 0x06, 0x00, 0x00,
}
